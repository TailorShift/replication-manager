# STREAM
#prod.kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_URL\:localhost\:9092}
# Debezium->MirrorMaker replicated messages inside the BackOffice cluster
mp.messaging.incoming.shops.connector=smallrye-kafka
mp.messaging.incoming.shops.topics=${SHOP_TOPIC:pg-datacenter.shops}
mp.messaging.incoming.pos_devices.connector=smallrye-kafka
mp.messaging.incoming.pos_devices.topics=${POS_DEVICES_TOPIC:pg-datacenter.pos_devices}
mp.messaging.incoming.products.connector=smallrye-kafka
mp.messaging.incoming.products.topics=${PRODUCTS_TOPIC:pg-datacenter.products}
mp.messaging.incoming.customers.connector=smallrye-kafka
mp.messaging.incoming.customers.topics=${CUSTOMERS_TOPIC:pg-datacenter.customers}
mp.messaging.incoming.employees.connector=smallrye-kafka
mp.messaging.incoming.employees.topics=${EMPLOYEES_TOPIC:pg-datacenter.employees}

# Debezium->MirrorMaker replicated messages inside the datacenter cluster
mp.messaging.incoming.receiptexports.connector=smallrye-kafka
mp.messaging.incoming.receiptexports.topics=${RECEIPT_EXPORTS_TOPIC:pg-backoffice.debeziumreceiptexports}
mp.messaging.outgoing.output.connector=smallrye-kafka
mp.messaging.outgoing.output.topic=pg-backoffice.debeziumreceiptexports

quarkus.http.port=8082

kafka.bootstrap.servers=sure-worm-9670-eu1-kafka.upstash.io:9092
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=SCRAM-SHA-256
kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="xxx" password="xxx";


# DB
quarkus.datasource.jdbc.url=${JDBC_URL:jdbc\:postgresql\://localhost\:5432/edgepos_manager?password=password&user=retail3}
quarkus.hibernate-orm.log.sql=true

quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

quarkus.container-image.registry=quay.io
quarkus.container-image.group=tailorshift
quarkus.container-image.name=replication-manager